name: Deploy to Eravend Server

on:
  push: 
    branches:
      - development

jobs:
  deploy:
    name: Build and Deploy to VPS
    runs-on: ubuntu-latest
    environment: CICD

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.10.0'
        
    - name: Install PNPM
      run: npm i -g pnpm

    - name: Install dependencies
      run: pnpm install

    - name: Build the project
      run: pnpm run build

    - name: Install SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.VPS_KEY }}

    - name: Archive build artifacts
      run: tar -czf build.tar.gz -C dist/apps/web .

    - name: Upload build artifacts to VPS
      run: |
        scp -o StrictHostKeyChecking=no build.tar.gz ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }}:/www/wwwroot/ems-production

    - name: Deploy to VPS
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} << EOF
          kill -9 $(fuser 4000/tcp)
          cd /www/wwwroot/ems-production
          find . -mindepth 1 -not -path './node_modules*' -not -name 'build.tar.gz' -exec rm -rf {} +
          tar -xzf build.tar.gz
          rm build.tar.gz
          bash /www/server/nodejs/vhost/scripts/emsProduction.sh > /dev/null
        EOF
      env:
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_IP: ${{ secrets.VPS_IP }}

    - name: Debug - Post-deployment
      if: always()
      run: |
        echo "Deployment step status: ${{ job.status }}"
